/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.fon.silab.forms;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import rs.fon.silab.config.Config;
import rs.fon.silab.controllers.Controller;
import rs.fon.silab.database.DbBroker;

/**
 *
 * @author Branislav Vidojevic
 */
public class ServerGUI extends javax.swing.JFrame {

    /**
     * Creates new form ServerGUI
     */
    public ServerGUI() {
        initComponents();
        btnStop.setEnabled(false);
        try {
            fillConfigForm();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEast = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        btnResetConfigFromFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDatabaseName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Parlament Server Window");
        setResizable(false);

        panelEast.setPreferredSize(new java.awt.Dimension(250, 400));

        btnStart.setText("START");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("STOP");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnResetConfigFromFile.setText("RESET CONFIG");
        btnResetConfigFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetConfigFromFileActionPerformed(evt);
            }
        });

        jLabel1.setText("PORT");

        jLabel2.setText("USER");

        jLabel3.setText("PASS");

        jLabel4.setText("DB URL");

        javax.swing.GroupLayout panelEastLayout = new javax.swing.GroupLayout(panelEast);
        panelEast.setLayout(panelEastLayout);
        panelEastLayout.setHorizontalGroup(
            panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEastLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEastLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResetConfigFromFile)
                        .addGap(66, 66, 66))
                    .addGroup(panelEastLayout.createSequentialGroup()
                        .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelEastLayout.createSequentialGroup()
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(panelEastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEastLayout.createSequentialGroup()
                        .addComponent(txtDatabaseName)
                        .addContainerGap())
                    .addGroup(panelEastLayout.createSequentialGroup()
                        .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(panelEastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEastLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        panelEastLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnStart, btnStop});

        panelEastLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtPassword, txtUsername});

        panelEastLayout.setVerticalGroup(
            panelEastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEastLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDatabaseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnResetConfigFromFile)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        panelEastLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnStart, btnStop});

        getContentPane().add(panelEast, java.awt.BorderLayout.LINE_END);

        txtAreaInfo.setColumns(20);
        txtAreaInfo.setRows(5);
        jScrollPane1.setViewportView(txtAreaInfo);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (validConfigData()) {
            Config.getInstance().setPort(Integer.parseInt(txtPort.getText()));
            Config.getInstance().setUsername(txtUsername.getText());
            Config.getInstance().setPassword(txtPassword.getText());
            Config.getInstance().setDbUrl(txtDatabaseName.getText());
            if (DbBroker.getInstance().connectToMySqlDatabase()) {
                Controller.getInstance().startServer(Config.getInstance().getPort());
                txtAreaInfo.append("Server started, listening on port " + Config.getInstance().getPort() + "\n");
                btnStart.setEnabled(false);
                btnStop.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't connect to database!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fix credentials and setup!", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        try {
            Controller.getInstance().stopServer();
            txtAreaInfo.append("Server stoped.\n");
            btnStart.setEnabled(true);
            btnStop.setEnabled(false);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Server socket couldn't be closed!");
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnResetConfigFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetConfigFromFileActionPerformed
        try {
            fillConfigForm();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnResetConfigFromFileActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetConfigFromFile;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelEast;
    private javax.swing.JTextArea txtAreaInfo;
    private javax.swing.JTextField txtDatabaseName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private boolean validConfigData() {
        refreshFormBorders();
        boolean valid = true;

        try {
            int port = Integer.parseInt(txtPort.getText());
            if (port < 1000 || port > 9999) {
                txtPort.setBorder(BorderFactory.createLineBorder(Color.RED));
                valid = false;
            }
        } catch (Exception ex) {
            txtPort.setBorder(BorderFactory.createLineBorder(Color.RED));
            valid = false;
        }
        if (txtUsername.getText().isEmpty()) {
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            valid = false;
        }
        if (txtDatabaseName.getText().isEmpty()) {
            txtDatabaseName.setBorder(BorderFactory.createLineBorder(Color.RED));
            valid = false;
        }
        return valid;

    }

    public Properties getConfigFile() throws IOException {
        try {
            Properties prop = new Properties();
            InputStream in = new FileInputStream("props.properties");
            prop.load(in);
            return prop;
        } catch (Exception e) {
            throw new IOException("There is no config file: " + "props.properties");
        }
    }

    private void refreshFormBorders() {
        txtPort.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtUsername.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtDatabaseName.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    private void fillConfigForm() throws IOException {
        Properties prop = getConfigFile();
        txtPort.setText(prop.getProperty("port"));
        txtUsername.setText(prop.getProperty("username"));
        txtPassword.setText(prop.getProperty("pass"));
        txtDatabaseName.setText(prop.getProperty("url"));
    }
}
