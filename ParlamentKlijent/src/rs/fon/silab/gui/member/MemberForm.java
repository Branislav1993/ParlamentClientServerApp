/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.fon.silab.gui.member;

import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import rs.fon.silab.controllers.Controller;
import rs.fon.silab.gui.models.MemberTableModel;
import rs.silab.domain.Member;
import rs.silab.domain.Party;

/**
 *
 * @author Branislav Vidojevic
 */
public class MemberForm extends javax.swing.JFrame {

    private AddMemberForm addMemberForm;

    /**
     * Creates new form MemberForm
     */
    public MemberForm() {
        initComponents();
        fillMemberTable();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    fillMemberInfo();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAddMember = new javax.swing.JButton();
        btnDeleteMember = new javax.swing.JButton();
        btnUpdateMember = new javax.swing.JButton();
        btnSeeMemberSpeeches = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblParties = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaBiography = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearchMembers = new javax.swing.JTextField();
        btnSearchMembers = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Parliament Member Form");

        jPanel1.setPreferredSize(new java.awt.Dimension(120, 402));

        btnAddMember.setText("ADD");
        btnAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMemberActionPerformed(evt);
            }
        });

        btnDeleteMember.setText("DELETE");
        btnDeleteMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMemberActionPerformed(evt);
            }
        });

        btnUpdateMember.setText("UPDATE");
        btnUpdateMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMemberActionPerformed(evt);
            }
        });

        btnSeeMemberSpeeches.setText("SPEECHEES");
        btnSeeMemberSpeeches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeMemberSpeechesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSeeMemberSpeeches)
                    .addComponent(btnUpdateMember)
                    .addComponent(btnDeleteMember)
                    .addComponent(btnAddMember))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddMember, btnDeleteMember, btnSeeMemberSpeeches, btnUpdateMember});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSeeMemberSpeeches)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        jTable1.setModel(new MemberTableModel(new LinkedList<Member>()));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Member Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(908, 250));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Member Parties", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(350, 250));

        lblParties.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane3.setViewportView(lblParties);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.LINE_END);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Biography", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        txtAreaBiography.setEditable(false);
        txtAreaBiography.setColumns(10);
        txtAreaBiography.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtAreaBiography.setLineWrap(true);
        txtAreaBiography.setRows(5);
        txtAreaBiography.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtAreaBiography);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel4.setPreferredSize(new java.awt.Dimension(908, 80));

        jLabel1.setText("Search for Members");

        btnSearchMembers.setText("SEARCH");
        btnSearchMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMembersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtSearchMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchMembers)))
                .addContainerGap(573, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchMembers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchMembers))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMemberActionPerformed
        if (addMemberForm == null || !addMemberForm.isDisplayable()) {
            addMemberForm = new AddMemberForm(this);
            addMemberForm.setVisible(true);
            addMemberForm.setLocationRelativeTo(this);
        } else {
            addMemberForm.toFront();
            addMemberForm.repaint();
        }

    }//GEN-LAST:event_btnAddMemberActionPerformed

    private void btnDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMemberActionPerformed
        int index = jTable1.getSelectedRow();
        jTable1.getSelectionModel().clearSelection();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select member to delete!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            MemberTableModel model = (MemberTableModel) jTable1.getModel();
            Member m = model.getMemberByIndex(index);
            try {
                Controller.getInstance().deleteMember(m);
                JOptionPane.showMessageDialog(this, "Member successfully deleted!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                model.deleteMemberByIndex(index);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Member was not deleted!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteMemberActionPerformed

    private void btnUpdateMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMemberActionPerformed
        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select member to update!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            MemberTableModel model = (MemberTableModel) jTable1.getModel();
            Member m = model.getMemberByIndex(index);
            if (addMemberForm == null || !addMemberForm.isDisplayable()) {
                addMemberForm = new AddMemberForm(this, m);
                addMemberForm.setVisible(true);
                addMemberForm.setLocationRelativeTo(this);
            } else {
                addMemberForm.toFront();
                addMemberForm.repaint();
            }
        }

    }//GEN-LAST:event_btnUpdateMemberActionPerformed

    private void btnSearchMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMembersActionPerformed
        String searchCriteria = txtSearchMembers.getText().trim();
        try {
            List<Member> members = Controller.getInstance().searchMembers(searchCriteria);
            jTable1.setModel(new MemberTableModel(members));
            if (members.size() > 0) {
                JOptionPane.showMessageDialog(this, "System found matching results!", "Success!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "There are no matching results!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Coldn't get members from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchMembersActionPerformed

    private void btnSeeMemberSpeechesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeMemberSpeechesActionPerformed
        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select member to see speeches!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            MemberTableModel model = (MemberTableModel) jTable1.getModel();
            Member m = model.getMemberByIndex(index);
            try {
                MemberSpeechesForm form = new MemberSpeechesForm(Controller.getInstance().getMemberSpeeches(m));
                form.setVisible(true);
                form.setLocationRelativeTo(null);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Couldn't get member speeches from server!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSeeMemberSpeechesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnDeleteMember;
    private javax.swing.JButton btnSearchMembers;
    private javax.swing.JButton btnSeeMemberSpeeches;
    private javax.swing.JButton btnUpdateMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblParties;
    private javax.swing.JTextArea txtAreaBiography;
    private javax.swing.JTextField txtSearchMembers;
    // End of variables declaration//GEN-END:variables

    public void fillMemberTable() {
        try {
            MemberTableModel model = new MemberTableModel(Controller.getInstance().getMembers());
            jTable1.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Couldn't get members from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillMemberInfo() {
        int index = jTable1.getSelectedRow();
        MemberTableModel model = (MemberTableModel) jTable1.getModel();
        Member m = model.getMemberByIndex(index);
        if (m == null) {
            return;
        }
        txtAreaBiography.setText(m.getBiography());
        try {
            String text = "";
            List<Party> parties = Controller.getInstance().getMemberParties(m);
            for (int i = 0; i < parties.size(); i++) {
                text += i + 1 + ". " + parties.get(i).getName() + "<br>";
            }
            lblParties.setText("<html>" + text + "</html>");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Couldn't get member parties from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }
}
