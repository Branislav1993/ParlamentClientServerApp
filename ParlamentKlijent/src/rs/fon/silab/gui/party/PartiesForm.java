/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.fon.silab.gui.party;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import rs.fon.silab.controllers.Controller;
import rs.fon.silab.gui.models.PartiesTableModel;
import rs.silab.domain.Party;

/**
 *
 * @author Branislav Vidojevic
 */
public class PartiesForm extends javax.swing.JFrame {

    /**
     * Creates new form PartiesForm
     */
    public PartiesForm() {
        initComponents();
        fillPartiesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAddParty = new javax.swing.JButton();
        btnDeleteParty = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearchParties = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(140, 220));

        btnAddParty.setText("ADD");
        btnAddParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPartyActionPerformed(evt);
            }
        });

        btnDeleteParty.setText("DELETE");
        btnDeleteParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePartyActionPerformed(evt);
            }
        });

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteParty)
                    .addComponent(jButton1)
                    .addComponent(btnAddParty, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddParty, btnDeleteParty, jButton1});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnAddParty)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteParty)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 100));

        jTable1.setModel(new PartiesTableModel(null));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 80));

        jLabel1.setText("Search for party");

        btnSearchParties.setText("SEARCH");
        btnSearchParties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPartiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchParties)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchParties))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPartyActionPerformed
        String partyName = showInserPartyDialog();
        if (partyName == null) {
        } else if (partyName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please, inset party name!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            Party p = new Party(null, partyName);
            try {
                Controller.getInstance().saveParty(p);
                jTable1.setModel(new PartiesTableModel(Controller.getInstance().getParties()));
                JOptionPane.showMessageDialog(this, "Successfully added a new party!", "Success!", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Something went wrong!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddPartyActionPerformed

    private void btnSearchPartiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPartiesActionPerformed
        String searchCriteria = txtSearch.getText().trim();
        try {
            List<Party> parties = Controller.getInstance().searchParties(searchCriteria);
            jTable1.setModel(new PartiesTableModel(parties));
            if (parties.size() > 0) {
                JOptionPane.showMessageDialog(this, "System found matching results!", "Success!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "There are no matching results!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Coldn't get members from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchPartiesActionPerformed

    private void btnDeletePartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePartyActionPerformed
        int index = jTable1.getSelectedRow();
        jTable1.getSelectionModel().clearSelection();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select party to delete!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            PartiesTableModel model = (PartiesTableModel) jTable1.getModel();
            Party p = model.getPartyByIndex(index);
            try {
                Controller.getInstance().deleteParty(p);
                JOptionPane.showMessageDialog(this, "Party successfully deleted!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                model.deletePartyByIndex(index);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Member was not deleted!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeletePartyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select party to update!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            PartiesTableModel model = (PartiesTableModel) jTable1.getModel();
            Party p = model.getPartyByIndex(index);
            String newName = showUpdatePartyDialog(p.getName());
            if (newName == null) {
            } else if (newName.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please, inset party name!", "Error!", JOptionPane.ERROR_MESSAGE);
            } else {
                p.setName(newName);
                try {
                    Controller.getInstance().updateParty(p);
                    fillPartiesTable();
                    JOptionPane.showMessageDialog(this, "Party successfully updated!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Partie was not updated!", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddParty;
    private javax.swing.JButton btnDeleteParty;
    private javax.swing.JButton btnSearchParties;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void fillPartiesTable() {
        try {
            List<Party> parties = Controller.getInstance().getParties();
            PartiesTableModel model = new PartiesTableModel(parties);
            jTable1.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Couldn't get parties from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }

    private String showInserPartyDialog() {
        JFrame frame = new JFrame("Add new party");
        String partyName = JOptionPane.showInputDialog(
                frame,
                "Insert Party name",
                "Add new party",
                JOptionPane.INFORMATION_MESSAGE
        );
        return partyName;
    }

    private String showUpdatePartyDialog(String partyName) {
        String newPartyName = JOptionPane.showInputDialog(this, "Update a party", partyName);
        return newPartyName;
    }
}
