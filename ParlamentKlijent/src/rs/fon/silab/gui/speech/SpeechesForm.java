/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.fon.silab.gui.speech;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import rs.fon.silab.controllers.Controller;
import rs.fon.silab.gui.models.MemberTableModel;
import rs.fon.silab.gui.models.SpeechTableModel;
import rs.silab.domain.Member;
import rs.silab.domain.Speech;

/**
 *
 * @author Branislav Vidojevic
 */
public class SpeechesForm extends javax.swing.JFrame {
    
    private AddSpeechForm addSpeechForm;

    /**
     * Creates new form SpeechesForm
     */
    public SpeechesForm() {
        initComponents();
        fillSpeechesTable();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    fillSpeechText();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAddSpeech = new javax.swing.JButton();
        btnUpdateSpeech = new javax.swing.JButton();
        btnDeleteSpeech = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearchSpeeches = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAddSpeech.setText("ADD");
        btnAddSpeech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSpeechActionPerformed(evt);
            }
        });

        btnUpdateSpeech.setText("UPDATE");
        btnUpdateSpeech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSpeechActionPerformed(evt);
            }
        });

        btnDeleteSpeech.setText("DELETE");
        btnDeleteSpeech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSpeechActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddSpeech)
                    .addComponent(btnUpdateSpeech)
                    .addComponent(btnDeleteSpeech))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddSpeech, btnDeleteSpeech, btnUpdateSpeech});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddSpeech)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateSpeech)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteSpeech)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setPreferredSize(new java.awt.Dimension(651, 80));

        jLabel1.setText("Search for speeches");

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSearchSpeeches, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)))
                .addContainerGap(367, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchSpeeches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(454, 250));

        jTable1.setModel(new SpeechTableModel(null));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("SPEECH TEXT"));
        jPanel3.setPreferredSize(new java.awt.Dimension(651, 200));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchCriteria = txtSearchSpeeches.getText().trim();
        try {
            List<Speech> speeches = Controller.getInstance().searchSpeeches(searchCriteria);
            jTable1.setModel(new SpeechTableModel(speeches));
            if (speeches.size() > 0) {
                JOptionPane.showMessageDialog(this, "System found matching results!", "Success!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "There are no matching results!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Coldn't get speeches from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteSpeechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSpeechActionPerformed
        int index = jTable1.getSelectedRow();
        jTable1.getSelectionModel().clearSelection();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select speech to delete!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            SpeechTableModel model = (SpeechTableModel) jTable1.getModel();
            Speech s = model.getSpeechByIndex(index);
            try {
                Controller.getInstance().deleteSpeech(s);
                JOptionPane.showMessageDialog(this, "Speech successfully deleted!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                model.deleteSpeechByIndex(index);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Speech was not deleted!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteSpeechActionPerformed

    private void btnAddSpeechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSpeechActionPerformed
       if (addSpeechForm == null || !addSpeechForm.isDisplayable()) {
            addSpeechForm = new AddSpeechForm(this);
            addSpeechForm.setVisible(true);
            addSpeechForm.setLocationRelativeTo(this);
        } else {
            addSpeechForm.toFront();
            addSpeechForm.repaint();
        }
    }//GEN-LAST:event_btnAddSpeechActionPerformed

    private void btnUpdateSpeechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSpeechActionPerformed
         int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select speech to update!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            SpeechTableModel model = (SpeechTableModel) jTable1.getModel();
            Speech s = model.getSpeechByIndex(index);
            if (addSpeechForm == null || !addSpeechForm.isDisplayable()) {
                addSpeechForm = new AddSpeechForm(this, s);
                addSpeechForm.setVisible(true);
                addSpeechForm.setLocationRelativeTo(this);
            } else {
                addSpeechForm.toFront();
                addSpeechForm.repaint();
            }
        }
    }//GEN-LAST:event_btnUpdateSpeechActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSpeech;
    private javax.swing.JButton btnDeleteSpeech;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateSpeech;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtSearchSpeeches;
    // End of variables declaration//GEN-END:variables

    public void fillSpeechesTable() {
        try {
            SpeechTableModel model = new SpeechTableModel(Controller.getInstance().getSpeeches());
            jTable1.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Couldn't get speeches from server!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillSpeechText() {
        int index = jTable1.getSelectedRow();
        SpeechTableModel model = (SpeechTableModel) jTable1.getModel();
        Speech s = model.getSpeechByIndex(index);
        if (s == null) {
            return;
        }
        jTextArea1.setText(s.getText());
    }
}
